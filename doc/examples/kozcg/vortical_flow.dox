/*!
  \page      kozcg_example_vortical_flow KozCG: Vortical flow

This example uses @ref inciter_kozcg in @ref inciter_main to compute a problem
whose analytic solution is known, therefore it can be used to verify the
accuracy of the numerical method and the correctness of the software
implementation.

The purpose of this problem is to test velocity errors generated by spatial
operators in the presence of 3D vorticity and in particular the superposition
of planar and vortical flows, analogous to vorticity stretching. The derivation
of this test problem, using the method of manufactured solutions, is given in
[1], preceded by a simplified version published in [2]. The combination of
vorticity and velocity gradients is a fundamental source of kinetic energy in
flows that transition to shear-driven turbulence, and hence an important
ingredient of computing many practical engineering and atmospheric flows.

@section kozcg_example_vortical_flow_equations Equations solved

The system of equation solved is

\f[ \begin{split}
  \frac{\partial U}{\partial t} + \frac{\partial F_j}{\partial x_j} = S,\qquad
  U = \begin{Bmatrix} \rho \\ \rho u_i \\ \rho E \end{Bmatrix}, \enskip F_j =
  \begin{Bmatrix} \rho u_j \\ \rho u_iu_j + p\delta_{ij} \\ u_j(\rho E + p)
  \end{Bmatrix}, \enskip
  S = \begin{Bmatrix} S_\rho \\ S_{u,i} \\ S_E \end{Bmatrix}
\end{split} \f]

detailed at the @ref inciter_kozcg page describing its numerical method, with
the exact solution

\f[ \begin{split}
\rho & = 1 \\
u_i(x_i) & = \left( \begin{array}{ccc} 
  \alpha x_1 - \beta x_2 \\ \beta x_1 + \alpha x_2 \\ - 2 \alpha x_3 \end{array} \right) \\
p(x_3) & = p_0 - 2 \rho \alpha^2 x_3^2 \\
e & = p(x_3) \rho \left( \gamma -1 \right)
\end{split} \f]
and the source terms
\f[ \begin{split}
S_\rho & = 0 \\
S_{u,i} & = \left( \begin{array}{c}
\rho \left( \alpha^2 - \beta^2 \right) x_1 - 2 \rho \alpha \beta x_2 \\
\rho \left( \alpha^2 - \beta^2 \right) x_2 + 2 \rho \alpha \beta x_1 \\
0
\end{array} \right) \\
S_E & = u_i S_{u,i} + \frac{8 \rho \alpha^3 x_3^2}{\gamma - 1}
\end{split} \f]

For more details, see @ref papers.

@section kozcg_example_vortical_flow_setup Problem setup

The simulation domain is a cube centered around the point {0,0,0}. The initial
conditions are sampled from the analytic solution at t=0. We set Dirichlet
boundary conditions on the sides of the cube, sampling the analytic solution.
The numerical solution does not depend on time and approaches steady state due
to the source term which ensures equilibrium in time. As the numerical solution
approaches a stationary state, the numerical errors in the flow variables
converge to stationary values, determined by the combination of spatial and
temporal errors which are measured and assessed.

@section kozcg_example_vortical_flow_sha Code revision to reproduce

To reproduce the results below, use code revision [8c9d1db](https://codeberg.org/xyst/xyst/commit/8c9d1db4d3f843170b585799a539b7851a67d467) and the control file below.

@section kozcg_example_vortical_flow_control Control file

@code{.lua}
-- vim: filetype=lua:

print "Euler equations computing vortical flow"

term = 3.0
ttyi = 10

solver = "kozcg"
fct = false

dt = 0.002      -- 750K
--dt = 0.001      --   6M
--dt = 0.0005      --  48M

part = "rcb"

problem = {
  name = "vortical_flow",
  alpha = 1.0,
  kappa = 1.0,
  p0 = 10.0,
}

mat = { spec_heat_ratio = 5/3 }

bc_dir = {
  { 1, 1, 1, 1, 1, 1 },
  { 2, 1, 1, 1, 1, 1 },
  { 3, 1, 1, 1, 1, 1 },
  { 4, 1, 1, 1, 1, 1 },
  { 5, 1, 1, 1, 1, 1 },
  { 6, 1, 1, 1, 1, 1 }
}

fieldout = {
  iter = 1000
}

diag = {
  iter = 1,
  format = "scientific"
}
@endcode

@section kozcg_example_vortical_flow_run Run using the 750K mesh on 32 CPUs

@code{.bash}
./charmrun +p32 Main/inciter -i unitcube_750K.exo -c vortical_flow.q
@endcode

@section kozcg_example_vortical_flow_fieldvis Visualization

[ParaView](https://www.paraview.org) can be used for interactive visualization
of the numerically computed fields as

@code{.bash}
paraview out.e-s.0.32.0
@endcode

The initial and final velocity, pressure, and total energy are depicted below.
@m_div{m-col-m-10 m-center-m}
<img src="images/vort_vel_t=0_a=10_b=10_bg.png"/>
<img src="images/vort_vel_t=1_a=10_b=10_bg.png"/>
<img src="images/vort_pressure_a=10_b=10_bg.png"/>
<img src="images/vort_energy_a=10_b=10_bg.png"/>
@m_enddiv

@section kozcg_example_vortical_flow_error Numerical errors

To estimate the order of convergence, the numerical solution is computed using
three different meshes, whose properties of are tabulated below.
       Mesh     | Points    | Tetrahedra   | h
       :------: | --------: | -----------: | --------:
           750K |   132,651 |    750,000   | 0.02
             6M | 1,030,301 |  6,000,000   | 0.01
            48M | 8,120,601 | 48,000,000   | 0.005
Here h is the average edge length. The next figure shows the time evolution of
the L1 error in fluid density for the three different meshes. The L1 error is
computed as
\f[
\left| \left| \varepsilon \right| \right|_1 = \frac{\sum_{v=1}^n V^v \left|
\hat{U}^v - U^{v} \right|} {\sum_{v=1}^n V^v}
\f]
where n is the number of points, \f$\hat{U}^v\f$ and
\f$U^v\f$ are the exact and computed solutions at mesh
point v, and \f$V^v\f$ denotes the volume associated to
mesh point v.

@m_div{m-col-m-10 m-center-m}
<img src="images/vortical_flow_L1r_kozcg.png"/>
@m_enddiv

Gnuplot commands to reproduce the above plot:
@code{.bash}
set terminal png size 800,600 enhanced font "Helvetica,16"
set output "vortical_flow_L1r_kozcg.png"
set xlabel "time"
set ylabel "L1 error"
set grid
plot [] [:1.8e-5] "diag.750K" u 2:20, "diag.6M" u 2:20, "diag.48M" u 2:20
@endcode

@note For the meshes, contact us using the link at the bottom of the page.

@section kozcg_example_vortical_flow_convergence Convergence rate

The following table summarizes the L1 errors in all flow variables at the
stationary state.
       Mesh     | L1(r)     |  L1(u)     | L1(v)     | L1(w)     | L(e)
       :------: | --------: | ---------: | --------: | --------: | --------:
       750K     | 1.35e-5   |  2.41e-5   | 9.78e-6   | 1.05e-4   | 1.80e-4
       6M       | 3.21e-6   |  5.32e-6   | 1.47e-6   | 1.98e-5   | 4.18e-5
       48M      | 7.85e-7   |  1.29e-6   | 2.91e-7   | 3.32e-6   | 1.01e-5
       p        | 2.03      |  2.04      | 2.34      | 2.57      | 2.05
Here r, u, v, w, and e are the fluid density, velocity in the x, y, z
directions, and the internal energy, respectively. The order of convergence is
estimated as
\f[
p = \frac{ \log \left| \left| \varepsilon \right| \right|_1^{m+1} - \log \left|
\left| \varepsilon \right| \right|_1^m}{ \log h^{m+1} - \log h^m}
\f]
where m is a mesh index. As expected, the asymptotic convergence of the
computed numerical solution in all variables approximates 2.

@section kozcg_example_vortical_flow_refs References

@m_div{m-text m-noindent}
[1] J. Waltz and T.R. Canfield and N.R. Morgan and L.D. Risinger and J.G. Wohlbier, [Manufactured solutions for the three-dimensional Euler equations with relevance to Inertial Confinement Fusion](https://doi.org/10.1016/j.jcp.2014.02.040), Journal of Computational Physics, 267, 196--209, 2014.
@m_enddiv

@m_div{m-text m-noindent}
[2] J. Waltz, T.R. Canfield, N.R. Morgan, L.D. Risinger, J.G. Wohlbier, [Verification of a three-dimensional unstructured finite element method using analytic and manufactured solutions](https://doi.org/10.1016/j.compfluid.2013.03.025), Computers & Fluids, 81: 57-67, 2013.
@m_enddiv

*/
