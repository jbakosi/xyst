/*!
@mainpage Xyst

Xyst is a Navier-Stokes solver for complex domains.

Using the [Charm++](http://charmplusplus.org/) runtime system, it employs
_asynchronous_ (or non-blocking) parallel programming and decomposes
computational problems into a large number of work units (that may be more than
the available number of processors) enabling _arbitrary overlap_ of parallel
computation, communication, input, and output. Then the runtime system
_dynamically_ and _automatically_ homogenizes computational load across the
simulation distributed across many computers.

Its ultimate goal is to simulate large and complex engineering problems with a
production-quality code that is extensible and maintainable, using hardware
resources efficiently, even for problems with _a priori_ unknown,
heterogeneous, and dynamic load distribution.

@section mainpage_tools Tools

Xyst consists of the following tools:

  - @ref inciter_main --- __Navier-Stokes solver for complex domains__

    _Inciter_ is a fully asynchronous distributed-memory-parallel fluid solver
    for complex engineering geometries. We are working on a compressible-flow
    solver using continuous Galerkin finite element methods and
    solution-adaptive mesh-refinement, enabling dynamically concentrating
    compute resources to regions with interesting physics.

  - @ref meshconv_main --- __Tetrahedron-mesh converter__

    _MeshConv_ is a mesh file converter that can be used to convert tetrahedron
    meshes from and to various formats.

  - @ref unittest_main --- __Test suite for synchronous and asynchronous
    functions__

    _UnitTest_ is an asynchronous distributed-memory-parallel test harness,
    capable of testing serial, synchronous (e.g., MPI) parallel, and
    asynchronous parallel (e.g., Charm++) functions.

@section mainpage_build Build

- Install prerequisites: _Debian/Ubuntu linux_

       apt-get install cmake gfortran gcc g++ openmpi-bin libopenmpi-dev
       apt-get install gmsh libpstreams-dev libboost-all-dev libblas-dev liblapack-dev liblapacke-dev libhdf5-dev libhdf5-openmpi-dev libnetcdf-mpi-dev libbackward-cpp-dev tao-pegtl-dev binutils-dev python3-pygments python3-jinja2 texlive-latex-base libdw-dev

- Clone, build third-party libraries, build & test

       git clone https://codeberg.org/xyst/xyst.git; cd walker
       mkdir external/build; cd external/build; cmake .. && make; cd -
       mkdir build; cd build; cmake ../src && make && ./charmrun +p4 Main/unittest -v -q && ctest -j4 --output-on-failure -LE extreme

All executables will be under `build/Main/`.

@section mainpage_license License

GPL v3.

@section mainpage_history History

Xyst was originally developed as part of
[Quinoa](https://quinoacomputing.github.io/archive/) (as Inciter) and later was
split off from the stochastic differential equation solvers (Walker) to contain
only the tools in this repository. Compared to Quinoa::Inciter the
cell-centered schemes have also been removed. As a result, Xyst, at this point,
only has the two node-centered schemes, DiagCG and ALECG.

*/
